<?php


namespace HyperfTest\Cases;


use App\Repository\TestRepository;
use App\Service\TestService;
use Hyperf\Di\Container;
use Hyperf\Utils\ApplicationContext;
use Mockery\Adapter\Phpunit\MockeryPHPUnitIntegration;
use PHPUnit\Framework\TestCase;
use PHPUnit\Framework\TestResult;

class TestServiceTest extends TestCase
{
    use MockeryPHPUnitIntegration;

    public function testTest()
    {
        /** @var Container $container */
        $container = ApplicationContext::getContainer();
        $this->mock = \Mockery::mock(TestRepository::class);
        $this->mock->shouldReceive('do')->andReturn('string');
        $container->define(TestRepository::class, function () {
            return $this->mock;
        });

        $ts = make(TestService::class);
        echo $ts->do();
    }
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->startMockery();
    }

    protected function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->closeMockery();
    }
}
